all: run

# Example Makefile for building and deploying a Python application with Docker

# To build and run the docker container locally, run:
# $ make

# or to publish the :latest version to the specified registry as :1.0.0, run:
# $ make publish RELEASE=1.0.0

#### VARIABLES ####
USER_NAME ?= user_name
APP_NAME ?= app_name
IMAGE_NAME := ${APP_NAME}

PY_VERSION ?= 3.6.2
RELEASE ?= 0.0.2
IMAGE_VERSION ?= latest

GIT_HASH = $(shell git rev-parse HEAD | cut -c 1-6)
BUILD_DATE = $(shell date -u '+%Y-%m-%d_%I:%M:%S%p')

#### COMMANDS ####
.PHONY: build
build:
	$(call blue, "# Building Python App...")
	@docker build --label APP_VERSION=${RELEASE} --label BUILT_ON=${BUILD_DATE} --label GIT_HASH=${GIT_HASH} -t ${USER_NAME}/${IMAGE_NAME} .

.PHONY: publish
publish: build
        $(call blue, "# Publishing Docker Image...")
        @docker push docker.io/${USERNAME}/${APP}:${RELEASE}

.PHONY: run
run:
	$(call blue, "# Running Python App...")
	@docker run --rm --name ${IMAGE_NAME} -v "$(CURDIR)":/src/app/ -w /src/app ${USER_NAME}/${IMAGE_NAME}:${RELEASE} python ${APP_NAME}.py

.PHONY: test
test:
	$(call blue, "# Testing Python App...")
	@docker run --rm --name ${IMAGE_NAME} -v "$(CURDIR)":/src/app/ -w /src/app ${USER_NAME}/${IMAGE_NAME} python ${APP_NAME}_test.py

#### FUNCTIONS ####
define blue
	@tput setaf 4
	@echo $1
	@tput sgr0
endef
